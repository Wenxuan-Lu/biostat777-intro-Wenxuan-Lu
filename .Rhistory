"3"=plot.df$topic[3],
"4"=plot.df$topic[4],
"5"=plot.df$topic[5],
"6"=plot.df$topic[6]))) +
scale_y_reordered() +
labs(title="Top 10 Words by Topics",
subtitle="The top 10 most probable words in each topic",
caption="Data Source: Topic Modeling for Research Articles from Kaggle",
x="Probability of Occurrence in Each Topic",
y="Word")
?unit
?unite
?mutate
?select
?Case_when
?case_when
?mutate
?select
?arrange
?Add_row
?add_row
?group_by
?summarize
?slice_max
?ungroup
?rename
?ungroup
?slice_max
?group_by
?summarize
?add_row
?arrange
ggplot(data=top_terms, aes(x=beta, y=reorder_within(x=term, by=beta, within=topic),
fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, scales="free",
labeller=labeller(topic=c("1"=plot.df$topic[1],
"2"=plot.df$topic[2],
"3"=plot.df$topic[3],
"4"=plot.df$topic[4],
"5"=plot.df$topic[5],
"6"=plot.df$topic[6]))) +
scale_y_reordered() +
labs(title="Top 10 Words by Topics",
subtitle="The top 10 most probable words in each topic",
caption="Data Source: Topic Modeling for Research Articles from Kaggle",
x="Probability of Occurrence in Each Topic",
y="Word") +
theme_minimal()
# install.packages("ggwordcloud")
library(ggwordcloud)
install.packages("ggwordcloud")
library(ggwordcloud)
ggplot(top_terms, aes(label = term, size = beta)) +
geom_text_wordcloud() +
facet_wrap(~topic, scales="free",
labeller=labeller(topic=c("1"=plot.df$topic[1],
"2"=plot.df$topic[2],
"3"=plot.df$topic[3],
"4"=plot.df$topic[4],
"5"=plot.df$topic[5],
"6"=plot.df$topic[6]))) +
theme_minimal()
ggplot(top_terms, aes(label=term, size=beta)) +
geom_text_wordcloud(color=beta) +
facet_wrap(~topic, scales="free",
labeller=labeller(topic=c("1"=plot.df$topic[1],
"2"=plot.df$topic[2],
"3"=plot.df$topic[3],
"4"=plot.df$topic[4],
"5"=plot.df$topic[5],
"6"=plot.df$topic[6]))) +
theme_minimal()
ggplot(top_terms, aes(label=term, size=beta, color=beta)) +
geom_text_wordcloud() +
facet_wrap(~topic, scales="free",
labeller=labeller(topic=c("1"=plot.df$topic[1],
"2"=plot.df$topic[2],
"3"=plot.df$topic[3],
"4"=plot.df$topic[4],
"5"=plot.df$topic[5],
"6"=plot.df$topic[6]))) +
theme_minimal()
#| code-fold: true
#| code-summary: "Show the code"
top_terms = tidy(lda_model, matrix = "beta") %>%
group_by(topic) %>%
slice_max(beta, n = 30) %>% # get the top 10 words within each topic
ungroup() %>%
mutate(topic.final=case_when ( # match the predicted label with the true label
topic == 1 ~ 1,
topic == 4 ~ 2,
topic == 2 ~ 3,
topic == 5 ~ 4,
topic == 3 ~ 5,
topic == 6 ~ 6
)) %>%
select(-topic) %>%
rename(topic=topic.final) %>%
arrange(topic, -beta)
ggplot(top_terms, aes(label=term, size=beta, color=beta)) +
geom_text_wordcloud() +
facet_wrap(~topic, scales="free",
labeller=labeller(topic=c("1"=plot.df$topic[1],
"2"=plot.df$topic[2],
"3"=plot.df$topic[3],
"4"=plot.df$topic[4],
"5"=plot.df$topic[5],
"6"=plot.df$topic[6]))) +
theme_minimal()
ggplot(top_terms, aes(label=term, size=beta, color=beta)) +
geom_text_wordcloud() +
facet_wrap(~topic, scales="free",
labeller=labeller(topic=c("1"=plot.df$topic[1],
"2"=plot.df$topic[2],
"3"=plot.df$topic[3],
"4"=plot.df$topic[4],
"5"=plot.df$topic[5],
"6"=plot.df$topic[6])))  +
labs(title="Top 50 Words by Topics",
subtitle="The top 50 most probable words in each topic",
caption="Data Source: Topic Modeling for Research Articles from Kaggle") +
theme(strip.text = element_text(size = 12),
plot.title = element_text(size=14)) +
theme_minimal()
ggplot(top_terms, aes(label=term, size=beta, color=beta)) +
geom_text_wordcloud() +
facet_wrap(~topic, scales="free",
labeller=labeller(topic=c("1"=plot.df$topic[1],
"2"=plot.df$topic[2],
"3"=plot.df$topic[3],
"4"=plot.df$topic[4],
"5"=plot.df$topic[5],
"6"=plot.df$topic[6])))  +
labs(title="Top 50 Words by Topics",
subtitle="The top 50 most probable words in each topic",
caption="Data Source: Topic Modeling for Research Articles from Kaggle") +
theme(strip.text = element_text(size=15),
plot.title = element_text(size=14)) +
theme_minimal()
ggplot(top_terms, aes(label=term, size=beta, color=beta)) +
geom_text_wordcloud() +
facet_wrap(~topic, scales="free",
labeller=labeller(topic=c("1"=plot.df$topic[1],
"2"=plot.df$topic[2],
"3"=plot.df$topic[3],
"4"=plot.df$topic[4],
"5"=plot.df$topic[5],
"6"=plot.df$topic[6])))  +
labs(title="Top 50 Words by Topics",
subtitle="The top 50 most probable words in each topic",
caption="Data Source: Topic Modeling for Research Articles from Kaggle") +
theme(strip.text = element_text(size=20),
plot.title = element_text(size=14)) +
theme_minimal()
#| code-fold: true
#| code-summary: "Show the code"
top_terms = tidy(lda_model, matrix = "beta") %>%
group_by(topic) %>%
slice_max(beta, n = 50) %>% # get the top 10 words within each topic
ungroup() %>%
mutate(topic.final=case_when ( # match the predicted label with the true label
topic == 1 ~ 1,
topic == 4 ~ 2,
topic == 2 ~ 3,
topic == 5 ~ 4,
topic == 3 ~ 5,
topic == 6 ~ 6
)) %>%
select(-topic) %>%
rename(topic=topic.final) %>%
arrange(topic, -beta)
ggplot(top_terms, aes(label=term, size=beta, color=beta)) +
geom_text_wordcloud() +
facet_wrap(~topic, scales="free",
labeller=labeller(topic=c("1"=plot.df$topic[1],
"2"=plot.df$topic[2],
"3"=plot.df$topic[3],
"4"=plot.df$topic[4],
"5"=plot.df$topic[5],
"6"=plot.df$topic[6])))  +
labs(title="Top 50 Words by Topics",
subtitle="The top 50 most probable words in each topic",
caption="Data Source: Topic Modeling for Research Articles from Kaggle") +
theme(strip.text = element_text(size=12),
plot.title = element_text(size=14)) +
theme_minimal()
#| code-fold: true
#| code-summary: "Show the code"
top_terms = tidy(lda_model, matrix = "beta") %>%
group_by(topic) %>%
slice_max(beta, n = 30) %>% # get the top 10 words within each topic
ungroup() %>%
mutate(topic.final=case_when ( # match the predicted label with the true label
topic == 1 ~ 1,
topic == 4 ~ 2,
topic == 2 ~ 3,
topic == 5 ~ 4,
topic == 3 ~ 5,
topic == 6 ~ 6
)) %>%
select(-topic) %>%
rename(topic=topic.final) %>%
arrange(topic, -beta)
ggplot(top_terms, aes(label=term, size=beta, color=beta)) +
geom_text_wordcloud() +
facet_wrap(~topic, scales="free",
labeller=labeller(topic=c("1"=plot.df$topic[1],
"2"=plot.df$topic[2],
"3"=plot.df$topic[3],
"4"=plot.df$topic[4],
"5"=plot.df$topic[5],
"6"=plot.df$topic[6])))  +
labs(title="Top 30 Words by Topics",
subtitle="The top 30 most probable words in each topic",
caption="Data Source: Topic Modeling for Research Articles from Kaggle") +
theme(strip.text = element_text(size=12),
plot.title = element_text(size=14)) +
theme_minimal()
#| code-fold: true
#| code-summary: "Show the code"
top_terms = tidy(lda_model, matrix = "beta") %>%
group_by(topic) %>%
slice_max(beta, n = 30) %>% # get the top 10 words within each topic
ungroup() %>%
mutate(topic.final=case_when ( # match the predicted label with the true label
topic == 1 ~ 1,
topic == 4 ~ 2,
topic == 2 ~ 3,
topic == 5 ~ 4,
topic == 3 ~ 5,
topic == 6 ~ 6
)) %>%
select(-topic) %>%
rename(topic=topic.final) %>%
arrange(topic, -beta)
ggplot(top_terms, aes(label=term, size=beta, color=beta)) +
geom_text_wordcloud() +
facet_wrap(~topic, scales="free",
labeller=labeller(topic=c("1"=plot.df$topic[1],
"2"=plot.df$topic[2],
"3"=plot.df$topic[3],
"4"=plot.df$topic[4],
"5"=plot.df$topic[5],
"6"=plot.df$topic[6])))  +
labs(title="Top 30 Words by Topics",
subtitle="The top 30 most probable words in each topic",
caption="Data Source: Topic Modeling for Research Articles from Kaggle") +
theme(strip.text = element_text(size=12),
plot.title = element_text(size=14)) +
theme_minimal()
#| code-fold: true
#| code-summary: "Show the code"
top_terms = tidy(lda_model, matrix = "beta") %>%
group_by(topic) %>%
slice_max(beta, n = 10) %>% # get the top 10 words within each topic
ungroup() %>%
mutate(topic.final=case_when ( # match the predicted label with the true label
topic == 1 ~ 1,
topic == 4 ~ 2,
topic == 2 ~ 3,
topic == 5 ~ 4,
topic == 3 ~ 5,
topic == 6 ~ 6
)) %>%
select(-topic) %>%
rename(topic=topic.final) %>%
arrange(topic, -beta)
ggplot(data=top_terms, aes(x=beta, y=reorder_within(x=term, by=beta, within=topic),
fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, scales="free",
labeller=labeller(topic=c("1"=plot.df$topic[1],
"2"=plot.df$topic[2],
"3"=plot.df$topic[3],
"4"=plot.df$topic[4],
"5"=plot.df$topic[5],
"6"=plot.df$topic[6]))) +
scale_y_reordered() +
labs(title="Top 10 Words by Topics",
subtitle="The top 10 most probable words in each topic",
caption="Data Source: Topic Modeling for Research Articles from Kaggle",
x="Probability of Occurrence in Each Topic",
y="Word") +
theme(strip.text = element_text(size=12),
plot.title = element_text(size=14)) +
theme_minimal()
#| code-fold: true
#| code-summary: "Show the code"
library(tidyr)
library(dplyr)
library(tibble)
library(tidytext)
library(ggplot2)
library(ggwordcloud)
library(topicmodels)
library(quanteda)
knitr::kable(tibble(`Field Name`=c("ID", "TITLE", "ABSTRACT",
"Computer.Science",
"Physics",
"Mathematics",
"Statistics",
"Quantitative.Biology",
"Quantitative.Finance"),
`Data Type` = c("int", "chr", "chr",
"int", "int", "int", "int", "int", "int"),
Description = c("Unique ID",
"Title of the Paper", "Abstract Summary of the Paper",
"0/1, Whether Under Computer Science Topic",
"0/1, Whether Under Physics Topic",
"0/1, Whether Under Mathematics Topic",
"0/1, Whether Under Statistics Topic",
"0/1, Whether Under Quantitative Biology Topic",
"0/1, Whether Under Quantitative Finance Topic")),
"html")
# load data
raw_data = tibble(read.csv("data/dataset.csv"))
# an example document (title)
cat(sprintf(raw_data[10,]$TITLE))
# an example document (abstract)
cat(sprintf(raw_data[10,]$ABSTRACT))
# an incomplete document (title)
cat(sprintf(raw_data[16395,]$TITLE))
# an incomplete document (title)
cat(sprintf(raw_data[16395,]$ABSTRACT))
raw_data = raw_data[-16395,] # delete this incomplete document
#| code-fold: true
#| code-summary: "Show the code"
raw_data = raw_data %>%
unite(col="text", TITLE:ABSTRACT, sep=" ") %>% # combine title and abstract
mutate(label=case_when( # adjust topics labels
Computer.Science==1 ~ 1,
Physics == 1 ~ 2,
Mathematics == 1 ~ 3,
Statistics == 1 ~ 4,
Quantitative.Biology == 1 ~ 5,
Quantitative.Finance == 1 ~ 6
)) %>%
select(ID, text, label) %>% # retain only necessary information
arrange(ID)
# an example data entry
raw_data[10,]
#| code-fold: true
#| code-summary: "Show the code"
# remove new line characters
raw_data$text = gsub(pattern = "\n", replacement = " ", x = raw_data$text)
# remove words that have length 1 or 2
raw_data$text = gsub(pattern='\\b\\w{1,2}\\b', '', x = raw_data$text)
tokens <- raw_data$text %>%
tokens(what = "word",
remove_punct = TRUE,
remove_symbols = TRUE,
remove_numbers = TRUE,
remove_url = TRUE,
remove_separators = TRUE,
split_hyphens= TRUE) %>%
tokens_tolower() %>%
tokens_remove(stopwords("english")) %>%
tokens_wordstem()
dfm.final <- dfm_trim(dfm(tokens),
max_docfreq = 0.04,
docfreq_type = "prop",
verbose = FALSE)
# the final document-term matrix
dtm = convert(dfm.final, to = "tm")
# an tokenized example after stemming
tokens[["text10"]]
# fit the model
lda_model = LDA(dtm, k=6, method="VEM", control=list(seed=4))
topics.prob = posterior(lda_model, dtm)$topics
pred.label = apply(topics.prob, 1, which.max)
true.label = raw_data$label
# confusion matrix
table(true.label, pred.label)
saveRDS(object=lda_model, file="data/lda_model.rds")
lda_model = readRDS("data/lda_model.rds")
topics.prob = posterior(lda_model, dtm)$topics
pred.label = apply(topics.prob, 1, which.max)
true.label = raw_data$label
# confusion matrix
table(true.label, pred.label)
citation(package="topicmodels")
citation(package="topicmodels", bibtex=TRUE)
print(citation(package="topicmodels"), bibtex=TRUE)
#| code-fold: true
#| code-summary: "Show the code"
ggplot(data=plot.df[-nrow(plot.df),], aes(x=label, y=prop)) +
geom_bar(stat="identity", width=0.8) +
geom_text(aes(label = round(prop, 2)), vjust = -0.5, size = 4) +
scale_x_discrete(labels = plot.df$topic) +
ylim(0, 0.5) +
labs(title="Distribution of Topics",
subtitle="The proportion of research articles in each topic",
caption="Data Source: Topic Modeling for Research Articles from Kaggle",
x="Topic",
y="Proportion") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=9),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
plot.title = element_text(size=14))
#| code-fold: true
#| code-summary: "Show the code"
# match the predicted label to the topic label according to the confusion matrix
pred.df = tibble(label=true.label, final.pred=0, raw.pred=pred.label) %>%
mutate(final.pred=case_when (
raw.pred == 1 ~ 1,
raw.pred == 4 ~ 2,
raw.pred == 2 ~ 3,
raw.pred == 5 ~ 4,
raw.pred == 3 ~ 5,
raw.pred == 6 ~ 6
))
# combine the predicted label and the true label
result_df = raw_data
result_df$pred = pred.df$final.pred
#| code-fold: true
#| code-summary: "Show the code"
plot.df= pred.df %>%
group_by(label) %>%
summarize(accuracy=mean(final.pred==label), count=n(), prop = count/nrow(raw_data))
plot.df = plot.df %>%
add_row(tibble_row(label=7,
accuracy=sum(plot.df$accuracy*plot.df$prop),
count=sum(plot.df$count),
prop=1)
) %>%
arrange(label)
plot.df$label = as.factor(plot.df$label)
plot.df$topic = c("Computer Science", "Physics", "Mathematics", "Statistics",
"Quantitative Biology", "Quantitative Finance", "Overall")
top_terms = tidy(lda_model, matrix = "beta") %>%
group_by(topic) %>%
slice_max(beta, n = 10) %>% # get the top 10 words within each topic
ungroup() %>%
mutate(topic.final=case_when ( # match the predicted label with the true label
topic == 1 ~ 1,
topic == 4 ~ 2,
topic == 2 ~ 3,
topic == 5 ~ 4,
topic == 3 ~ 5,
topic == 6 ~ 6
)) %>%
select(-topic) %>%
rename(topic=topic.final) %>%
arrange(topic, -beta)
ggplot(data=top_terms, aes(x=beta, y=reorder_within(x=term, by=beta, within=topic),
fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, scales="free",
labeller=labeller(topic=c("1"=plot.df$topic[1],
"2"=plot.df$topic[2],
"3"=plot.df$topic[3],
"4"=plot.df$topic[4],
"5"=plot.df$topic[5],
"6"=plot.df$topic[6]))) +
scale_y_reordered() +
labs(title="Top 10 Words by Topics",
subtitle="The top 10 most probable words in each topic",
caption="Data Source: Topic Modeling for Research Articles from Kaggle",
x="Probability of Occurrence in Each Topic",
y="Word") +
theme(strip.text = element_text(size=12),
plot.title = element_text(size=14)) +
theme_minimal()
#| code-fold: true
#| code-summary: "Show the code"
top_terms = tidy(lda_model, matrix = "beta") %>%
group_by(topic) %>%
slice_max(beta, n = 30) %>% # get the top 10 words within each topic
ungroup() %>%
mutate(topic.final=case_when ( # match the predicted label with the true label
topic == 1 ~ 1,
topic == 4 ~ 2,
topic == 2 ~ 3,
topic == 5 ~ 4,
topic == 3 ~ 5,
topic == 6 ~ 6
)) %>%
select(-topic) %>%
rename(topic=topic.final) %>%
arrange(topic, -beta)
ggplot(top_terms, aes(label=term, size=beta, color=beta)) +
geom_text_wordcloud() +
facet_wrap(~topic, scales="free",
labeller=labeller(topic=c("1"=plot.df$topic[1],
"2"=plot.df$topic[2],
"3"=plot.df$topic[3],
"4"=plot.df$topic[4],
"5"=plot.df$topic[5],
"6"=plot.df$topic[6])))  +
labs(title="Top 30 Words by Topics",
subtitle="The top 30 most probable words in each topic",
caption="Data Source: Topic Modeling for Research Articles from Kaggle") +
theme(strip.text = element_text(size=12),
plot.title = element_text(size=14)) +
theme_minimal()
#| code-fold: true
#| code-summary: "Show the code"
ggplot(data=plot.df[-nrow(plot.df),], aes(x=label, y=prop)) +
geom_bar(stat="identity", width=0.8) +
geom_text(aes(label = round(prop, 2)), vjust = -0.5, size = 4) +
scale_x_discrete(labels = plot.df$topic) +
ylim(0, 0.5) +
labs(title="Distribution of Topics",
subtitle="The proportion of research articles in each topic",
caption="Data Source: Topic Modeling for Research Articles from Kaggle",
x="Topic",
y="Proportion") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=9),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
plot.title = element_text(size=14))
